apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: nginx
  name: nginx
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      k8s-app: nginx
  template:
    metadata:
      labels:
        k8s-app: nginx
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "k8s-app"
                    operator: In
                    values:
                    - nginx
              topologyKey: "kubernetes.io/hostname"
          - weight: 90
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "k8s-app"
                    operator: In
                    values:
                    - nginx
              topologyKey: "failure-domain.beta.kubernetes.io/zone"
      containers:
      - name: nginx
        image: nginx:1-alpine
        ports:
        - name: nginx
          containerPort: 80
        livenessProbe:
          initialDelaySeconds: 5
          httpGet:
            path: /
            port: nginx
        readinessProbe:
          initialDelaySeconds: 5
          httpGet:
            path: /
            port: nginx
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: nginx
  name: nginx
spec:
  ports:
  - name: http
    port: 80
    targetPort: nginx
  selector:
    k8s-app: nginx
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-test-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    certmanager.k8s.io/issuer: "letsencrypt-prod"
    certmanager.k8s.io/acme-challenge-type: http01
spec:
  tls:
  - hosts:
    - awesomenginx.mydomain.com
    secretName: awesomenginx-https
  rules:
  - host: awesomenginx.mydomain.com
    http:
      paths:
      - path: /
        backend:
          serviceName: nginx
          servicePort: 80

